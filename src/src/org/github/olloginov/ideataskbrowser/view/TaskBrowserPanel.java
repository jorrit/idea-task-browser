package org.github.olloginov.ideataskbrowser.view;

import com.intellij.openapi.actionSystem.ActionManager;
import com.intellij.openapi.actionSystem.ActionToolbar;
import com.intellij.openapi.actionSystem.DefaultActionGroup;
import com.intellij.openapi.ui.SimpleToolWindowPanel;
import org.github.olloginov.ideataskbrowser.actions.OpenInBrowserAction;
import org.github.olloginov.ideataskbrowser.actions.OpenInContextAction;
import org.github.olloginov.ideataskbrowser.actions.RefreshListAction;

import javax.swing.*;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;
import java.awt.*;

public class TaskBrowserPanel {
    private static final String TOOL_WINDOW_ID = "TaskBrowser";

    private JPanel root;
    private JSplitPane contentSplitter;
    private JTree tree;
    private JPanel preview;
    private JScrollPane treeScroll;

    private TaskTreeModel treeModel = new TaskTreeModel();

    public TaskBrowserPanel() {
        tree.setModel(treeModel);
        tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        tree.setCellRenderer(new TaskTreeRenderer());

        initToolbarActions();
    }

    private void initToolbarActions() {
        final DefaultActionGroup toolbarGroup = new DefaultActionGroup();
        toolbarGroup.add(new RefreshListAction());
        toolbarGroup.add(new OpenInContextAction());
        toolbarGroup.add(new OpenInBrowserAction());

        final ActionManager actionManager = ActionManager.getInstance();
        final ActionToolbar toolbar = actionManager.createActionToolbar(TOOL_WINDOW_ID, toolbarGroup, false);
        root.add(toolbar.getComponent(), BorderLayout.WEST);
    }

    public SimpleToolWindowPanel wrapInToolWindowPanel() {
        SimpleToolWindowPanel panel = new SimpleToolWindowPanel(false);
        panel.add($$$getRootComponent$$$(), BorderLayout.CENTER);
        return panel;
    }

    public TaskTreeModel getModel() {
        return treeModel;
    }

    public TreeNode getSelectedNode() {
        TreePath selectionPath = tree.getSelectionPath();
        if (selectionPath == null) {
            return null;
        }
        return (TreeNode) selectionPath.getLastPathComponent();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new BorderLayout(0, 0));
        contentSplitter = new JSplitPane();
        contentSplitter.setDividerLocation(332);
        root.add(contentSplitter, BorderLayout.CENTER);
        preview = new JPanel();
        preview.setLayout(new BorderLayout(0, 0));
        contentSplitter.setRightComponent(preview);
        treeScroll = new JScrollPane();
        contentSplitter.setLeftComponent(treeScroll);
        tree = new JTree();
        tree.setRootVisible(false);
        tree.setShowsRootHandles(true);
        treeScroll.setViewportView(tree);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }
}
